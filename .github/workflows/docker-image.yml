name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
jobs:
  app-version:
    runs-on: ubuntu-latest
    steps:
      - name: Application Version
        id: tests
        uses: PaulHatch/semantic-version@v5.0.0-alpha2
        with:
          # The prefix to use to identify tags
          tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "(MAJOR)"
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "(MINOR)"
          # A string to determine the format of the version output
          format: "${major}.${minor}.${patch}-prerelease${increment}"
          # If this is set to true, *every* commit will be treated as a new version.
          bump_each_commit: false
    outputs:
        version_tag: ${{ steps.tests.outputs.version_tag }}  

  build:
    needs: app-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{secrets.REGISTRY}}
          username: ${{secrets.DOCKER_USER}}
          password: ${{secrets.WCD_TOKEN}}
      - run: echo ls
      - name: Test
        run: echo ${{ needs.app-version.outputs.version_tag }}
      - name: Build the Docker image
        run: docker build . -t ${{secrets.DOCKER_USER}}/${{secrets.REPO_NAME}}/client:${{ needs.app-version.outputs.version_tag }} -f client/GisaxsClient/GisaxsClient/Dockerfile
